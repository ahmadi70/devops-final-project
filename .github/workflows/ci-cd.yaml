name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Step 1: Build and test the application
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Docker
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOCKEN }}

      # Build backend
      - name: Build Backend Docker Image
        run: docker build -t nahid70/devops-final-backend:latest ./expensy_backend

      # Build frontend
      - name: Build Frontend Docker Image
        run: docker build -t nahid70/devops-final-frontend:latest ./expensy_frontend

      # Push updated images to DockerHub
      - name: Push Backend Docker Image
        run: docker push nahid70/devops-final-backend:latest

      - name: Push Frontend Docker Image
        run: docker push nahid70/devops-final-frontend:latest

      - name: Install Docker Compose
        uses: KengoTODA/actions-setup-docker-compose@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Test with down and up docker-compose 
      - name: Test Dockerfile images with docker-compose
        run: |
          docker compose -f docker-compose.yaml down
          docker compose -f docker-compose.yaml up -d

  # Step 3: Deploy to production - it should be for EKS cluster 
  deploy-production:
    needs: build-test
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Updating the EKS cluster using kubeconfig
        run: aws eks update-kubeconfig --name nahid-eks-tf49TzK9 --region ${{ secrets.AWS_REGION }} 
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 

      - name: Debug - List files in the repo
        run: ls -R

      - name: Verify EKS Connection
        run: kubectl get nodes
        
    #   - name: Deploy manifests to EKS
    #     run: |
    #         kubectl apply -f mongo-secret.yaml
    #         kubectl apply -f mongo.yaml
    #         kubectl apply -f redis.yaml
    #         kubectl apply -f backend.yaml
    #         kubectl apply -f frontend.yaml
